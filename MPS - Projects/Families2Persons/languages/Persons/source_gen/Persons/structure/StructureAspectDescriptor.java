package Persons.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptFemale = createDescriptorForFemale();
  /*package*/ final ConceptDescriptor myConceptMale = createDescriptorForMale();
  /*package*/ final ConceptDescriptor myConceptPerson = createDescriptorForPerson();
  /*package*/ final ConceptDescriptor myConceptPersonRegister = createDescriptorForPersonRegister();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptFemale, myConceptMale, myConceptPerson, myConceptPersonRegister);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Female:
        return myConceptFemale;
      case LanguageConceptSwitch.Male:
        return myConceptMale;
      case LanguageConceptSwitch.Person:
        return myConceptPerson;
      case LanguageConceptSwitch.PersonRegister:
        return myConceptPersonRegister;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForFemale() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Persons", "Female", 0x91cc9005a0364c2eL, 0xbabb65eb287c094cL, 0x7382222671696b7aL);
    b.class_(false, false, false);
    b.super_("Persons.structure.Person", 0x91cc9005a0364c2eL, 0xbabb65eb287c094cL, 0x7382222671696ab2L);
    b.origin("r:a460a563-26d7-479d-b8d8-4780d86779a7(Persons.structure)/8323252609840933754");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMale() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Persons", "Male", 0x91cc9005a0364c2eL, 0xbabb65eb287c094cL, 0x7382222671696b79L);
    b.class_(false, false, false);
    b.super_("Persons.structure.Person", 0x91cc9005a0364c2eL, 0xbabb65eb287c094cL, 0x7382222671696ab2L);
    b.origin("r:a460a563-26d7-479d-b8d8-4780d86779a7(Persons.structure)/8323252609840933753");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPerson() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Persons", "Person", 0x91cc9005a0364c2eL, 0xbabb65eb287c094cL, 0x7382222671696ab2L);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:a460a563-26d7-479d-b8d8-4780d86779a7(Persons.structure)/8323252609840933554");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPersonRegister() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Persons", "PersonRegister", 0x91cc9005a0364c2eL, 0xbabb65eb287c094cL, 0x2927891fcedcef0cL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:a460a563-26d7-479d-b8d8-4780d86779a7(Persons.structure)/2965489649354338060");
    b.version(2);
    b.aggregate("persons", 0x2927891fcedcef45L).target(0x91cc9005a0364c2eL, 0xbabb65eb287c094cL, 0x7382222671696ab2L).optional(true).ordered(true).multiple(true).origin("2965489649354338117").done();
    return b.create();
  }
}
